/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double>result=new ArrayList<>();
        if(root==null) return result;

        Queue<TreeNode>queue=new LinkedList<>();
        queue.offer(root);
        // double sum=0;sum is a persistent variable, it exists throughout the whole function.You're reusing it across iterations of the while loop.

        while(!queue.isEmpty()){
          double sum=0; //sum is a temporary (local) variable that is created fresh each time the while loop runs.
          //sum=0; manually resetting at the start of each level
            int n =queue.size();
            for(int i=0;i<n;i++){
            TreeNode curr=queue.poll();
            sum+=curr.val;
           
       
           if(curr.left!=null) queue.offer(curr.left);
           if(curr.right!=null) queue.offer(curr.right);
        } 
         result.add(sum/n);
    }
        return result;

    }
}
